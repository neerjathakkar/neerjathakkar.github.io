<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tech Recruiting | Neerja Thakkar</title>
    <link>https://neerja.me/tag/tech-recruiting/</link>
      <atom:link href="https://neerja.me/tag/tech-recruiting/index.xml" rel="self" type="application/rss+xml" />
    <description>Tech Recruiting</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>This work by Neerja Thakkar is licensed under a Creative Commons Attribution 4.0 International License.
Â© Neerja Thakkar 2020</copyright><lastBuildDate>Sat, 05 Sep 2020 13:00:25 -0500</lastBuildDate>
    <image>
      <url>https://neerja.me/images/icon_hu709051646b5c016a474294f302c76519_2025058_512x512_fill_lanczos_center_2.png</url>
      <title>Tech Recruiting</title>
      <link>https://neerja.me/tag/tech-recruiting/</link>
    </image>
    
    <item>
      <title>Getting a SWE Internship, Part 2</title>
      <link>https://neerja.me/post/tech_internships_2/</link>
      <pubDate>Sat, 05 Sep 2020 13:00:25 -0500</pubDate>
      <guid>https://neerja.me/post/tech_internships_2/</guid>
      <description>&lt;p&gt;As I said in 
&lt;a href=&#34;%28https://neerja.me/post/rec_letters/%29&#34;&gt;part 1&lt;/a&gt; of this post, I started the fall of my junior year having never had an internship in the tech industry, and ended it with software engineering internship offers at Facebook, Palantir, and Microsoft, among other companies. My first post covered having a strong resume/job application, and this one will cover nailing the actual interview.&lt;/p&gt;
&lt;p&gt;Before I dive into it, I want to link to a few helpful resources that I&amp;rsquo;ll refer to throughout this post:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href=&#34;http://www.crackingthecodinginterview.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cracking the Coding Interview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://leetcode.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;LeetCode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://www.hackerrank.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hackerrank&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There are a few different components to the tech internship interview process and types of interviews:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Coding challenges: Sometimes, a recruiter will send you a link to a &amp;ldquo;coding challenge&amp;rdquo;. This will often be on a platform similar to Leetcode or Hackerrank, and is a prerequisite to getting an interview. Be careful when you click on it, because this will normally start a timer. Read the instructions very carefully, since often your code will have to perform in a specific way to pass the challenge.  The best way to prepare for these challenges are to do a lot of questions on such a platform. It&amp;rsquo;s also useful to ask your recruiter if the coding challenge is going to be graded by an automated process or by a human - if by a human, be sure to comment your code so that even if something is off they know your thought process&lt;/li&gt;
&lt;li&gt;Phone screen: Often, before getting to the interviews, you will have a phone screen. The phone screen can be one of many things - it can just be a chance for you to ask the recruiter questions, it can be a behavioral interview, it can contain a brain teaser, or it can have a full 45-minute coding question. Be sure to understand which kind of interview it will be well before the call&lt;/li&gt;
&lt;li&gt;Coding question interview: This is an interview where you are given 1-3 questions that you have to talk through and then write code for. This can be in-person, with coding on a whiteboard, or over the phone, with coding on a Google doc or similar platform. When applying to internships, I had 2-5 of these interviews, depending on the company. The next section will focus on preparation for this type of interview&lt;/li&gt;
&lt;li&gt;Team matching interview: Google has these interviews after you pass the coding interviews (I made it to this stage but dropped out after one interview because I didn&amp;rsquo;t like the team and had offer deadlines with other companies), in order to make sure there&amp;rsquo;s a good fit between you and the team. Some other companies also have similar interviews. Definitely take these seriously, because they can determine whether or not a team is willing to have you join them, which translates into you getting the internship or not&lt;/li&gt;
&lt;li&gt;Other interviews: I don&amp;rsquo;t know that much about other types of interviews such as design or PM (product management), but Cracking the Coding Interview has an amazing breakdown of other types of interviews, and the author has written a separate book on applying to PM jobs&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Preparing for the coding interview&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;First, I decided on the topics I needed to master and reviewed the basics of those topics by implementing data structures/algorithms from scratch. These topics included (but are not limited to - it&amp;rsquo;s been a while) the following:
&lt;ul&gt;
&lt;li&gt;Data structures - arrays, strings, linked lists, trees, DAG, graphs&lt;/li&gt;
&lt;li&gt;Algorithms - sorting, binary search, tree traversal, BFS/DFS, Dijkstra&amp;rsquo;s, minimum spanning tree algorithms&lt;/li&gt;
&lt;li&gt;Some bit manipulation and other topics I didn&amp;rsquo;t know well, so I wouldn&amp;rsquo;t be caught completely off guard if asked a question, but I didn&amp;rsquo;t go too in depth on learning things I didn&amp;rsquo;t really know&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Then, I nailed down a solid approach to solving an interview question that I could practice with and hone. The interview is as much testing your coding abilities as your critical thinking and communication skills, so based on knowing that, this was my approach:
&lt;ol&gt;
&lt;li&gt;Carefully read/process the question, create a small example if it&amp;rsquo;s not provided to help you conceptualize what you&amp;rsquo;re being asked to do&lt;/li&gt;
&lt;li&gt;Ask clarifying questions! Think of different cases you have to consider (for example duplicates, negative numbers), and ask if there are any conditions on the input you are given or the output you have to produce. Oftentimes, part of the challenge is being given a vague question and then having to nail down exactly what you are being asked&lt;/li&gt;
&lt;li&gt;Once you have a good idea of what you&amp;rsquo;re supposed to be solving, come up with the first solution you can think of, even if it would be really slow or not provide a completely correct output. Describe your solution and acknowledge these limitations. Your interviewer might ask you to code it up at this point.&lt;/li&gt;
&lt;li&gt;Then, work on optimizing your solution. If the small example you created was lacking, come up with a better example to work with. Your interviewer might give you hints and that&amp;rsquo;s completely okay! They want to see how you respond to their suggestions. Cracking the Coding Interview has some good strategies on how to optimize your solution using this approach&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;I tried to solve many of the questions in CTCI using this approach . I went slowly, really thought things through, and read hints as needed to get a minimal working solution that I would then code up. After, I would always carefully read the solution no matter how far I got and really understand where I went wrong.&lt;/li&gt;
&lt;li&gt;I also solved some questions in leetcode for more practice - leetcode has a lot of good, hard questions&lt;/li&gt;
&lt;li&gt;I did a mix of paper coding (to emulate a whiteboard) and coding on computer in a basic text editor or Google docs - I think practicing both was very important for me since typing and writing interact with my thought process in different ways, especially when I&amp;rsquo;m also talking out loud as I code&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I would also highly encourage you to practice whiteboard coding with friends! There are so many tech jobs out there and recruiters really want to see all qualified candidates succeed, so there&amp;rsquo;s absolutely no reason to be competitive with your peers and not help each other. Get hints from them when you struggle and talk as you code to emulate a real interview.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Getting a SWE Internship, Part 1</title>
      <link>https://neerja.me/post/tech_internships_1/</link>
      <pubDate>Mon, 24 Aug 2020 13:00:25 -0500</pubDate>
      <guid>https://neerja.me/post/tech_internships_1/</guid>
      <description>&lt;p&gt;As I approached my junior year, I had never had a software engineering internship in the tech industry before, and I really wanted to get an internship at a big or medium-sized tech company for the upcoming summer. I did some research on how to approach recruiting, and then I went for it. I ended up getting offers at Facebook, Microsoft, and Palantir, among other companies. In this 3-part series, I&amp;rsquo;ll walk you through the steps I took that led to that outcome.&lt;/p&gt;
&lt;p&gt;In this post, I&amp;rsquo;ll talk about how to strengthen your application so that you get an interview. In my next post, I&amp;rsquo;ll talk about how to nail the interview. Finally, I&amp;rsquo;ll discuss how to navigate choosing an internship post-offer. This series is based on my own experiences, which were heavily influenced by older students, and by 
&lt;a href=&#34;http://www.crackingthecodinginterview.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cracking the Coding Interview&lt;/a&gt;. I&amp;rsquo;ll be referencing the book several times, and it&amp;rsquo;s very worth checking it out!&lt;/p&gt;
&lt;p&gt;The first step to getting an interview is having a strong resume. There are two components to this - building the material that will go on your resume, and then actually writing the resume.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Generating strong material for your resume&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Course selection - take relevant computer science courses, and especially ones with projects.  Math courses also look good. For software engineering internships, GPA doesn&amp;rsquo;t seem to be too significant - a general rule of thumb I heard is that if it&amp;rsquo;s above 3.0, put it on, if it&amp;rsquo;s below, keep it off. If your major GPA is higher than your average GPA, and you&amp;rsquo;re majoring in a relevant technical field, it&amp;rsquo;s fine to just put your major GPA on.&lt;/li&gt;
&lt;li&gt;Work on side projects  - working on projects will improve your programming skills, and also show initiative to recruiters.&lt;/li&gt;
&lt;li&gt;Look for opportunities at your school or in your community relevant to software engineering. For example, Dartmouth, my undergraduate institution, has the 
&lt;a href=&#34;http://dali.dartmouth.edu/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;DALI lab&lt;/a&gt;. You could also teach yourself basic website development skills and then build a website for an organization that you&amp;rsquo;re a part of. Don&amp;rsquo;t hesitate to apply for opportunities even if you don&amp;rsquo;t feel like you know enough - obviously, be honest about your experiences, but once you&amp;rsquo;re on the job there is so much that you can teach yourself.&lt;/li&gt;
&lt;li&gt;Seek out SWE internships at companies that might feel less prestigious or desirable, since having any SWE internship experiences on your resume will make it a lot easier to get future interviews.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;How to write your resume&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Try not to go over 1 page. Remove high school activities and jobs as needed.&lt;/li&gt;
&lt;li&gt;Include detailed descriptions on exactly what you did and highlight your contributions. Try to quantify them if possible (ex. I optimized this code to make it 4.5x faster).&lt;/li&gt;
&lt;li&gt;Add a section on programming projects. This can involve research projects, class projects, and side projects. State the technologies that you used and your contributions, if this was a group project.&lt;/li&gt;
&lt;li&gt;Be prepared to discuss anything you put on your resume, or to be asked questions relevant to any programming languages or frameworks that you say you know on your resume. You can differentiate these by level of experience.&lt;/li&gt;
&lt;li&gt;Only include important technical skills, so that they stand out. Many people include things such as Microsoft Office that everyone should know, and that aren&amp;rsquo;t very impressive compared to programming languages/frameworks.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Applying to Jobs&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Once you have a resume, it&amp;rsquo;s time to actually apply to jobs. Applying online definitely can lead to interviews, and you should send your resume to as many places as you can, especially when trying to get your first internship. That being said, there are many other application approaches that often will result in a better shot at an interview.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Career fairs at your university: These are great because you can actually talk to recruiters, learn about the company, and indicate your interest. At a career fair, an actual human being will see your resume, instead of an automated bot. If you can get a recruiter&amp;rsquo;s email at the career fair, you have a point of contact to follow up with, which is much better than submitting a resume online and waiting to receive an automated message.&lt;/li&gt;
&lt;li&gt;Career fairs at conferences: Conferences such as Grace Hopper or Out4U have huge career fairs that are incredible places to snag an internship or full time offer, but come prepared to interview on the spot.&lt;/li&gt;
&lt;li&gt;Smaller companies: use websites such as 
&lt;a href=&#34;https://angel.co/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;AngelList&lt;/a&gt; to find startups in locations/fields that you&amp;rsquo;re interested in. Interning at a startup is an incredible opportunity to learn a lot, and startups tend to have a later recruitment cycle.&lt;/li&gt;
&lt;li&gt;LinkedIn: Keep your profile updated and indicate that you are searching for jobs, and recruiters will sometimes reach out to you. I&amp;rsquo;ve also had success emailing alumni from my college to ask about their career paths, and sometimes alumni will even be willing to refer you.&lt;/li&gt;
&lt;li&gt;Referrals: If you have friends or know older students who have worked for tech companies, don&amp;rsquo;t be afraid to ask if they would be willing to write you a referral. Some tech companies will incentivize employees to get referrals, so many people are very happy to help. Of course, it&amp;rsquo;s the decision of whoever you ask whether they decide to give you a referral or not, but&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Also, a note on cover letters - I didn&amp;rsquo;t write any cover letters, but some small/medium sized tech companies might like to see more personalized interest.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
